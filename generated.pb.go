// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/narqo/benchserder/generated.proto

package benchserder

import (
	fmt "fmt"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	callback "github.com/narqo/benchserder/internal/callback"
	fraud "github.com/narqo/benchserder/internal/fraud"
	_ "github.com/narqo/benchserder/internal/tokens"
	github_com_narqo_benchserder_internal_tokens "github.com/narqo/benchserder/internal/tokens"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_28d524a75cebafed, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Event.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return m.ProtoSize()
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Event)(nil), "github.com.narqo.benchserder.Event")
}

func init() {
	proto.RegisterFile("github.com/narqo/benchserder/generated.proto", fileDescriptor_28d524a75cebafed)
}

var fileDescriptor_28d524a75cebafed = []byte{
	// 993 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xcd, 0x6e, 0x1b, 0x37,
	0x10, 0xc7, 0xb5, 0xb5, 0x13, 0x4b, 0x94, 0x2c, 0xc9, 0xcc, 0x17, 0xab, 0xa6, 0x5a, 0x35, 0x3d,
	0x54, 0x2e, 0xda, 0x15, 0x92, 0x34, 0x05, 0xd2, 0x4f, 0x48, 0x89, 0x51, 0x18, 0x0d, 0x9a, 0x60,
	0xed, 0xb4, 0x6e, 0x2f, 0x0b, 0x6a, 0x49, 0x29, 0x84, 0x56, 0xe4, 0x96, 0x4b, 0x09, 0x72, 0x9e,
	0xa0, 0xc7, 0x3c, 0x42, 0x7a, 0xea, 0xab, 0xe4, 0x98, 0x63, 0x4f, 0x6a, 0x61, 0xbf, 0x40, 0xcf,
	0x3e, 0x15, 0x24, 0x77, 0x25, 0xc5, 0x06, 0x02, 0x6d, 0xd1, 0x1b, 0x77, 0x66, 0xfe, 0x3f, 0xce,
	0x2c, 0x87, 0x43, 0xf0, 0xc9, 0x90, 0xa9, 0x67, 0x93, 0xbe, 0x17, 0x8a, 0x71, 0x87, 0x63, 0xf9,
	0xab, 0xe8, 0xf4, 0x29, 0x0f, 0x9f, 0x25, 0x54, 0x12, 0x2a, 0x3b, 0x43, 0xca, 0xa9, 0xc4, 0x8a,
	0x12, 0x2f, 0x96, 0x42, 0x09, 0x78, 0x73, 0x19, 0xed, 0x99, 0x68, 0x6f, 0x25, 0xba, 0xf1, 0xe9,
	0x0a, 0x6b, 0x28, 0x86, 0xa2, 0x63, 0x44, 0xfd, 0xc9, 0xc0, 0x7c, 0x99, 0x0f, 0xb3, 0xb2, 0xb0,
	0xc6, 0x57, 0x6f, 0xdd, 0x9a, 0x71, 0x45, 0x25, 0xc7, 0x51, 0x47, 0x89, 0x11, 0xe5, 0xc9, 0xf9,
	0x54, 0x1a, 0xee, 0x50, 0x88, 0x61, 0x44, 0x97, 0x7b, 0x28, 0x36, 0xa6, 0x89, 0xc2, 0xe3, 0x38,
	0x0d, 0xf8, 0x66, 0x3d, 0x3c, 0x9f, 0x44, 0x11, 0xee, 0x47, 0xf4, 0xc2, 0x06, 0x5f, 0xae, 0xa7,
	0x1f, 0x0b, 0x4e, 0x8f, 0xff, 0xab, 0x78, 0x20, 0xf1, 0x84, 0x5c, 0x10, 0xaf, 0x99, 0x79, 0x88,
	0xa3, 0xa8, 0x8f, 0xc3, 0xd1, 0x79, 0xfd, 0xad, 0x3f, 0xea, 0xe0, 0xd2, 0xde, 0x94, 0x72, 0x05,
	0x7f, 0x04, 0x25, 0x1c, 0xc7, 0x81, 0xf9, 0x85, 0xc8, 0x69, 0x39, 0xed, 0x52, 0xef, 0xfe, 0xd9,
	0xdc, 0xbd, 0x97, 0xe7, 0xcf, 0x7b, 0xdd, 0x38, 0x3e, 0xd4, 0x2b, 0xbf, 0x88, 0xd3, 0x15, 0xfc,
	0x09, 0x6c, 0x29, 0x89, 0xc3, 0x11, 0x95, 0xe8, 0x1d, 0x43, 0xfd, 0xfa, 0x6c, 0xee, 0xde, 0xcf,
	0x45, 0x3d, 0xb4, 0x7a, 0x4b, 0xce, 0x68, 0x70, 0x1f, 0x6c, 0x62, 0xc2, 0x08, 0xda, 0x30, 0xd4,
	0x7b, 0x67, 0x73, 0xf7, 0x76, 0xbe, 0x5c, 0x09, 0x23, 0xbe, 0x41, 0xc0, 0xcf, 0xc1, 0x8d, 0x01,
	0x0e, 0x69, 0x5f, 0x88, 0x51, 0x80, 0x95, 0x92, 0xac, 0x3f, 0x51, 0x4c, 0xf0, 0x80, 0x11, 0xb4,
	0xa9, 0xe9, 0xfe, 0xb5, 0xcc, 0xdd, 0x5d, 0x7a, 0xf7, 0x09, 0x6c, 0x83, 0xfa, 0x52, 0xc7, 0xad,
	0xe0, 0x92, 0x11, 0x54, 0x17, 0x02, 0x6e, 0x22, 0x77, 0x41, 0xdd, 0xe4, 0xcd, 0xf8, 0x30, 0xa0,
	0x5c, 0x37, 0x11, 0x41, 0x97, 0x4d, 0x64, 0x2d, 0xb3, 0xef, 0x59, 0x33, 0x7c, 0x00, 0x40, 0x18,
	0xb1, 0x70, 0x14, 0xe8, 0x2e, 0x45, 0x5b, 0x2d, 0xa7, 0x5d, 0xbe, 0xd3, 0xf0, 0x6c, 0x0b, 0x7b,
	0x59, 0x0b, 0x7b, 0x87, 0x59, 0x0b, 0xf7, 0x8a, 0xaf, 0xe6, 0x6e, 0xe1, 0xc5, 0x5f, 0xae, 0xe3,
	0x97, 0x8c, 0x4e, 0x7b, 0xa0, 0x0f, 0xe0, 0x80, 0xc9, 0x44, 0x05, 0x09, 0x4d, 0x12, 0x5d, 0x8a,
	0x81, 0x15, 0x73, 0xc0, 0xea, 0x46, 0x7f, 0x60, 0xe5, 0x86, 0xf9, 0x04, 0xec, 0x44, 0xf8, 0x3c,
	0xb2, 0x94, 0x03, 0x59, 0xd3, 0xf2, 0x55, 0xe2, 0x23, 0x60, 0x4c, 0x01, 0xd5, 0x1d, 0x68, 0x79,
	0x20, 0x07, 0x6f, 0x5b, 0x8b, 0x4d, 0xf7, 0xbe, 0x91, 0x9f, 0xd4, 0xb8, 0x09, 0xb5, 0xbc, 0x72,
	0xde, 0xfc, 0x7c, 0xab, 0x36, 0x44, 0x7d, 0x14, 0x92, 0xea, 0xeb, 0x12, 0x60, 0x85, 0x2a, 0xb9,
	0x8e, 0xc2, 0xea, 0xba, 0x0a, 0xee, 0x81, 0xb2, 0xa4, 0x21, 0x65, 0x53, 0x4b, 0xd9, 0xce, 0x41,
	0x01, 0x99, 0xb0, 0xab, 0xe0, 0x77, 0xa0, 0xc2, 0x78, 0xa2, 0x70, 0x14, 0xd9, 0xc2, 0xaa, 0x39,
	0x38, 0xe5, 0x54, 0x69, 0x8a, 0x1a, 0x80, 0xda, 0x02, 0x94, 0x5e, 0xcc, 0xda, 0xff, 0x71, 0x31,
	0xab, 0xd9, 0x26, 0xe9, 0xfd, 0xfc, 0x68, 0xb9, 0x4f, 0x28, 0x26, 0x5c, 0xc9, 0x63, 0x54, 0xb7,
	0x77, 0x23, 0x35, 0x3f, 0xb0, 0x56, 0xa8, 0x00, 0xca, 0x02, 0xd9, 0x38, 0x96, 0x69, 0x77, 0xf5,
	0x71, 0x42, 0x09, 0xda, 0x31, 0x55, 0x7e, 0xe6, 0xbd, 0xed, 0x31, 0xf1, 0xb2, 0xb4, 0xbc, 0x6c,
	0x40, 0x7b, 0x3d, 0x21, 0xa2, 0xde, 0xa6, 0xae, 0xdf, 0xbf, 0x9e, 0xb2, 0xf7, 0x17, 0xe8, 0x9e,
	0x26, 0x43, 0x17, 0x94, 0xd3, 0xb6, 0x33, 0x13, 0x0f, 0x9a, 0xd4, 0x80, 0x31, 0xd9, 0xc1, 0x75,
	0x00, 0xb6, 0xd2, 0x4e, 0x42, 0x57, 0x4c, 0x16, 0x77, 0xd7, 0xcc, 0xc2, 0x8c, 0x79, 0xaf, 0x3b,
	0xd6, 0xe5, 0xa5, 0x49, 0x64, 0x24, 0xbd, 0x2b, 0xa1, 0x53, 0x16, 0xd2, 0x40, 0x1d, 0xc7, 0x14,
	0x5d, 0xb5, 0xbb, 0x5a, 0xd3, 0xe1, 0x71, 0x4c, 0x61, 0x0b, 0x94, 0x29, 0x9f, 0x32, 0x29, 0xf8,
	0x98, 0x72, 0x85, 0xae, 0x99, 0x80, 0x55, 0x13, 0x0c, 0x40, 0x55, 0xd7, 0x19, 0x24, 0x64, 0x14,
	0x44, 0x74, 0x4a, 0x23, 0x74, 0x3d, 0x57, 0x7a, 0x8b, 0x9f, 0xb4, 0xbf, 0x48, 0xaf, 0xa2, 0x6d,
	0x07, 0x64, 0xf4, 0x48, 0xe3, 0x60, 0x1b, 0x94, 0x9f, 0x0b, 0x4e, 0x03, 0x31, 0x18, 0x24, 0x54,
	0xa1, 0x1b, 0x2d, 0xa7, 0xbd, 0xd1, 0xdb, 0x3a, 0x9b, 0xbb, 0x1b, 0x8c, 0x2b, 0x1f, 0x68, 0xdf,
	0x63, 0xe3, 0x82, 0x4f, 0x00, 0x30, 0xcf, 0x52, 0x30, 0x62, 0x9c, 0x20, 0xd4, 0x72, 0xda, 0xd5,
	0x3b, 0xb7, 0xd7, 0x4c, 0xc3, 0x08, 0xbd, 0xef, 0x19, 0x27, 0x7e, 0xc9, 0xac, 0xf5, 0x12, 0x7e,
	0x00, 0x2a, 0x31, 0xe3, 0x43, 0xfd, 0x56, 0x05, 0x13, 0x19, 0xa1, 0x77, 0x6d, 0xfd, 0x99, 0xed,
	0xa9, 0x8c, 0xe0, 0xcf, 0x60, 0x3b, 0x7b, 0xce, 0x02, 0x82, 0x15, 0x46, 0x8d, 0x5c, 0x3d, 0x92,
	0x69, 0xbd, 0x87, 0x58, 0x61, 0xbf, 0x92, 0x7d, 0xea, 0x2f, 0x78, 0x0b, 0x6c, 0xdb, 0xa9, 0x29,
	0x92, 0x80, 0xe3, 0x31, 0x45, 0xef, 0xd9, 0xed, 0x8d, 0xf1, 0x71, 0xf2, 0x03, 0x1e, 0x53, 0xf8,
	0x61, 0x16, 0x93, 0x35, 0xf5, 0x4d, 0x13, 0x53, 0x31, 0xc6, 0xac, 0xa5, 0x3f, 0x06, 0x3b, 0x36,
	0x68, 0xf5, 0xb0, 0xdf, 0xb7, 0xf3, 0xde, 0x38, 0x1e, 0x2e, 0x4f, 0x7c, 0x17, 0xd4, 0x2f, 0xb4,
	0x7d, 0xb3, 0xe5, 0xb4, 0x8b, 0x7e, 0x8d, 0x9d, 0xeb, 0xd9, 0x0e, 0xb8, 0x92, 0x02, 0xf5, 0x74,
	0xb1, 0x2f, 0x11, 0x25, 0xc8, 0x35, 0xd1, 0xd0, 0xba, 0xfc, 0x15, 0x0f, 0xfc, 0x16, 0xd4, 0x67,
	0xb3, 0x59, 0x30, 0xe1, 0x92, 0x86, 0x62, 0xc8, 0xd9, 0x73, 0x4a, 0x50, 0xab, 0xe5, 0xb4, 0x2b,
	0xbd, 0xab, 0x27, 0x73, 0xb7, 0x7e, 0x74, 0x74, 0xf4, 0x86, 0xcf, 0xaf, 0xcd, 0x66, 0xb3, 0xa7,
	0x2b, 0x86, 0x2f, 0x8a, 0xbf, 0xbd, 0x74, 0x0b, 0xff, 0xfc, 0xee, 0x16, 0x7a, 0xbb, 0xaf, 0x4e,
	0x9a, 0xce, 0xeb, 0x93, 0xa6, 0xf3, 0xf7, 0x49, 0xb3, 0xf0, 0xe2, 0xb4, 0x59, 0x78, 0x79, 0xda,
	0x74, 0x5e, 0x9f, 0x36, 0x0b, 0x7f, 0x9e, 0x36, 0x0b, 0xbf, 0x94, 0x57, 0xfe, 0x75, 0xff, 0xb2,
	0x19, 0x46, 0x77, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x14, 0x12, 0xbe, 0x31, 0x0a, 0x00,
	0x00,
}

func (m *Event) Marshal() (dAtA []byte, err error) {
	size := m.ProtoSize()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Event) MarshalTo(dAtA []byte) (int, error) {
	size := m.ProtoSize()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Event) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.XXX_unrecognized) > 0 {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.XXX_unrecognized)))
		i--
		dAtA[i] = 0x2
		i--
		dAtA[i] = 0x82
	}
	if m.DeviceReattributed {
		i--
		if m.DeviceReattributed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf8
	}
	if m.ImpressionBased {
		i--
		if m.ImpressionBased {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xf0
	}
	if len(m.FirstDeviceType) > 0 {
		i -= len(m.FirstDeviceType)
		copy(dAtA[i:], m.FirstDeviceType)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.FirstDeviceType)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xea
	}
	if len(m.FirstCountry) > 0 {
		i -= len(m.FirstCountry)
		copy(dAtA[i:], m.FirstCountry)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.FirstCountry)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	if len(m.FirstOsName) > 0 {
		i -= len(m.FirstOsName)
		copy(dAtA[i:], m.FirstOsName)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.FirstOsName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xda
	}
	if m.CallbackData != nil {
		{
			size, err := m.CallbackData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintGenerated(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if len(m.PingbackUrl) > 0 {
		i -= len(m.PingbackUrl)
		copy(dAtA[i:], m.PingbackUrl)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.PingbackUrl)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if m.FraudKind != 0 {
		i = encodeVarintGenerated(dAtA, i, uint64(m.FraudKind))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc0
	}
	if m.ZoneOffset != 0 {
		i = encodeVarintGenerated(dAtA, i, uint64(m.ZoneOffset))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb8
	}
	{
		size, err := m.NullSdkLevel.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0xb2
	if len(m.Environment) > 0 {
		i -= len(m.Environment)
		copy(dAtA[i:], m.Environment)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Environment)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.DeviceType) > 0 {
		i -= len(m.DeviceType)
		copy(dAtA[i:], m.DeviceType)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.DeviceType)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xa2
	}
	{
		size, err := m.Revenue.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x9a
	if len(m.EventToken) > 0 {
		i -= len(m.EventToken)
		copy(dAtA[i:], m.EventToken)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.EventToken)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x92
	}
	{
		size, err := m.InstallImpressionBased.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenerated(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1
	i--
	dAtA[i] = 0x8a
	if len(m.InstallCountry) > 0 {
		i -= len(m.InstallCountry)
		copy(dAtA[i:], m.InstallCountry)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.InstallCountry)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x82
	}
	if len(m.InstallTracker) > 0 {
		i -= len(m.InstallTracker)
		copy(dAtA[i:], m.InstallTracker)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.InstallTracker)))
		i--
		dAtA[i] = 0x7a
	}
	n5, err5 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.InstallTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.InstallTime):])
	if err5 != nil {
		return 0, err5
	}
	i -= n5
	i = encodeVarintGenerated(dAtA, i, uint64(n5))
	i--
	dAtA[i] = 0x72
	n6, err6 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.ReceivedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.ReceivedAt):])
	if err6 != nil {
		return 0, err6
	}
	i -= n6
	i = encodeVarintGenerated(dAtA, i, uint64(n6))
	i--
	dAtA[i] = 0x6a
	n7, err7 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.CreatedAt, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt):])
	if err7 != nil {
		return 0, err7
	}
	i -= n7
	i = encodeVarintGenerated(dAtA, i, uint64(n7))
	i--
	dAtA[i] = 0x62
	n8, err8 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.LastRevenueTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.LastRevenueTime):])
	if err8 != nil {
		return 0, err8
	}
	i -= n8
	i = encodeVarintGenerated(dAtA, i, uint64(n8))
	i--
	dAtA[i] = 0x5a
	n9, err9 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.LastEventTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.LastEventTime):])
	if err9 != nil {
		return 0, err9
	}
	i -= n9
	i = encodeVarintGenerated(dAtA, i, uint64(n9))
	i--
	dAtA[i] = 0x52
	n10, err10 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.LastSessionTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.LastSessionTime):])
	if err10 != nil {
		return 0, err10
	}
	i -= n10
	i = encodeVarintGenerated(dAtA, i, uint64(n10))
	i--
	dAtA[i] = 0x4a
	n11, err11 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.FirstSessionTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.FirstSessionTime):])
	if err11 != nil {
		return 0, err11
	}
	i -= n11
	i = encodeVarintGenerated(dAtA, i, uint64(n11))
	i--
	dAtA[i] = 0x42
	n12, err12 := github_com_gogo_protobuf_types.StdTimeMarshalTo(m.ClickTime, dAtA[i-github_com_gogo_protobuf_types.SizeOfStdTime(m.ClickTime):])
	if err12 != nil {
		return 0, err12
	}
	i -= n12
	i = encodeVarintGenerated(dAtA, i, uint64(n12))
	i--
	dAtA[i] = 0x3a
	if len(m.TrackingEnabled) > 0 {
		i -= len(m.TrackingEnabled)
		copy(dAtA[i:], m.TrackingEnabled)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.TrackingEnabled)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.FacebookAnonId) > 0 {
		i -= len(m.FacebookAnonId)
		copy(dAtA[i:], m.FacebookAnonId)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.FacebookAnonId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.FacebookAttributionId) > 0 {
		i -= len(m.FacebookAttributionId)
		copy(dAtA[i:], m.FacebookAttributionId)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.FacebookAttributionId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Adid) > 0 {
		i -= len(m.Adid)
		copy(dAtA[i:], m.Adid)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Adid)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Tracker) > 0 {
		i -= len(m.Tracker)
		copy(dAtA[i:], m.Tracker)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.Tracker)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.AppToken) > 0 {
		i -= len(m.AppToken)
		copy(dAtA[i:], m.AppToken)
		i = encodeVarintGenerated(dAtA, i, uint64(len(m.AppToken)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintGenerated(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenerated(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Event) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppToken)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.Tracker)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.Adid)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.FacebookAttributionId)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.FacebookAnonId)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.TrackingEnabled)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ClickTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.FirstSessionTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastSessionTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastEventTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastRevenueTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ReceivedAt)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.InstallTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.InstallTracker)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.InstallCountry)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = m.InstallImpressionBased.ProtoSize()
	n += 2 + l + sovGenerated(uint64(l))
	l = len(m.EventToken)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = m.Revenue.ProtoSize()
	n += 2 + l + sovGenerated(uint64(l))
	l = len(m.DeviceType)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.Environment)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = m.NullSdkLevel.ProtoSize()
	n += 2 + l + sovGenerated(uint64(l))
	if m.ZoneOffset != 0 {
		n += 2 + sovGenerated(uint64(m.ZoneOffset))
	}
	if m.FraudKind != 0 {
		n += 2 + sovGenerated(uint64(m.FraudKind))
	}
	l = len(m.PingbackUrl)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	if m.CallbackData != nil {
		l = m.CallbackData.ProtoSize()
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.FirstOsName)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.FirstCountry)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.FirstDeviceType)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	if m.ImpressionBased {
		n += 3
	}
	if m.DeviceReattributed {
		n += 3
	}
	l = len(m.XXX_unrecognized)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	return n
}

func sovGenerated(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenerated(x uint64) (n int) {
	return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Event) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Event: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Event: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppToken = github_com_narqo_benchserder_internal_tokens.AppToken(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tracker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tracker = github_com_narqo_benchserder_internal_tokens.TrackerToken(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Adid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Adid = github_com_narqo_benchserder_internal_tokens.Adid(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FacebookAttributionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FacebookAttributionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FacebookAnonId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FacebookAnonId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TrackingEnabled", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TrackingEnabled = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClickTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.ClickTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstSessionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.FirstSessionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastSessionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.LastSessionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastEventTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.LastEventTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastRevenueTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.LastRevenueTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.CreatedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceivedAt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.ReceivedAt, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_gogo_protobuf_types.StdTimeUnmarshal(&m.InstallTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 15:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallTracker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstallTracker = github_com_narqo_benchserder_internal_tokens.TrackerToken(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 16:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallCountry", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstallCountry = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 17:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallImpressionBased", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.InstallImpressionBased.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 18:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EventToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EventToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Revenue", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Revenue.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Environment", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Environment = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NullSdkLevel", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.NullSdkLevel.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ZoneOffset", wireType)
			}
			m.ZoneOffset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ZoneOffset |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 24:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FraudKind", wireType)
			}
			m.FraudKind = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FraudKind |= fraud.Kind(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PingbackUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PingbackUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.CallbackData == nil {
				m.CallbackData = &callback.Data{}
			}
			if err := m.CallbackData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 27:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstOsName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstOsName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstCountry", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstCountry = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 29:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FirstDeviceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FirstDeviceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImpressionBased", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.ImpressionBased = bool(v != 0)
		case 31:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceReattributed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.DeviceReattributed = bool(v != 0)
		case 32:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field XXX_unrecognized", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthGenerated
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthGenerated
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized[:0], dAtA[iNdEx:postIndex]...)
			if m.XXX_unrecognized == nil {
				m.XXX_unrecognized = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenerated(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthGenerated
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenerated(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenerated
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenerated
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthGenerated
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowGenerated
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipGenerated(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthGenerated
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthGenerated = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenerated   = fmt.Errorf("proto: integer overflow")
)
