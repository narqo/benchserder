// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: generated.proto

package benchserder

import (
	"fmt"
	"math"
	math_bits "math/bits"
	"time"

	_ "github.com/gogo/protobuf/gogoproto"
	"github.com/gogo/protobuf/proto"
	github_com_gogo_protobuf_types "github.com/gogo/protobuf/types"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/narqo/benchserder/internal/tokens"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ed858329eb171d, []int{0}
}
func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Event)(nil), "github.com.narqo.benchserder.Event")
}

func init() { proto.RegisterFile("generated.proto", fileDescriptor_e6ed858329eb171d) }

var fileDescriptor_e6ed858329eb171d = []byte{
	// 928 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xdf, 0x8f, 0x1b, 0x35,
	0x10, 0xc7, 0x2f, 0xf4, 0xda, 0x4b, 0x9c, 0x5c, 0x92, 0x73, 0xb9, 0xd6, 0x84, 0x72, 0x1b, 0xca,
	0x03, 0x29, 0x12, 0x1b, 0xb5, 0xa5, 0x48, 0xe5, 0x97, 0x94, 0xb4, 0x27, 0x74, 0xa2, 0xa2, 0xd5,
	0xde, 0x01, 0x82, 0x97, 0x95, 0xb3, 0x3b, 0x49, 0xad, 0x6c, 0xec, 0xc5, 0xeb, 0x44, 0x3a, 0xfe,
	0x02, 0x1e, 0xf9, 0x13, 0xca, 0x7f, 0xc3, 0x5f, 0x11, 0x10, 0x48, 0x3c, 0xf3, 0x7c, 0x4f, 0xc8,
	0xe3, 0xdd, 0x24, 0xdc, 0x49, 0x28, 0x8b, 0x78, 0xf3, 0xce, 0xcc, 0xf7, 0xe3, 0x99, 0xf5, 0x78,
	0x4c, 0x5a, 0x13, 0x90, 0xa0, 0xb9, 0x81, 0xd8, 0x4f, 0xb5, 0x32, 0x8a, 0xde, 0x99, 0x08, 0xf3,
	0x72, 0x3e, 0xf2, 0x23, 0x35, 0xf3, 0x25, 0xd7, 0xdf, 0x2b, 0x7f, 0x04, 0x32, 0x7a, 0x99, 0x81,
	0x8e, 0x41, 0x77, 0xde, 0x5f, 0x7b, 0xfb, 0x13, 0x35, 0x51, 0x7d, 0x14, 0x8d, 0xe6, 0x63, 0xfc,
	0xc2, 0x0f, 0x5c, 0x39, 0x58, 0xe7, 0x93, 0x8d, 0x70, 0x84, 0xf5, 0x37, 0x60, 0x7d, 0x21, 0x0d,
	0x68, 0xc9, 0x93, 0xbe, 0x51, 0x53, 0x90, 0x59, 0xff, 0x52, 0x2a, 0x1d, 0x6f, 0xa2, 0xd4, 0x24,
	0x81, 0xf5, 0x1e, 0x46, 0xcc, 0x20, 0x33, 0x7c, 0x96, 0xe6, 0x01, 0x9f, 0x6d, 0x87, 0x97, 0xf3,
	0x24, 0xe1, 0xa3, 0x04, 0xae, 0x6c, 0xf0, 0xf1, 0x76, 0xfa, 0x99, 0x92, 0x70, 0xfe, 0x5f, 0xc5,
	0x63, 0xcd, 0xe7, 0xf1, 0x15, 0xf1, 0x96, 0x99, 0x47, 0x3c, 0x49, 0x46, 0x3c, 0x9a, 0x5e, 0xd6,
	0xdf, 0xfd, 0xb3, 0x45, 0xae, 0x1f, 0x2f, 0x40, 0x1a, 0xfa, 0x35, 0xa9, 0xf1, 0x34, 0x0d, 0xf1,
	0x17, 0xb2, 0x4a, 0xb7, 0xd2, 0xab, 0x0d, 0x1f, 0x5f, 0x2c, 0xbd, 0x47, 0x65, 0xfe, 0xbc, 0x3f,
	0x48, 0xd3, 0x33, 0xbb, 0x0a, 0xaa, 0x3c, 0x5f, 0xd1, 0x6f, 0xc8, 0x9e, 0xd1, 0x3c, 0x9a, 0x82,
	0x66, 0xaf, 0x21, 0xf5, 0xd3, 0x8b, 0xa5, 0xf7, 0xb8, 0x14, 0xf5, 0xcc, 0xe9, 0x1d, 0xb9, 0xa0,
	0xd1, 0x13, 0xb2, 0xcb, 0x63, 0x11, 0xb3, 0x6b, 0x48, 0x7d, 0x74, 0xb1, 0xf4, 0xee, 0x97, 0xcb,
	0x35, 0x16, 0x71, 0x80, 0x08, 0xfa, 0x21, 0xb9, 0x3d, 0xe6, 0x11, 0x8c, 0x94, 0x9a, 0x86, 0xdc,
	0x18, 0x2d, 0x46, 0x73, 0x23, 0x94, 0x0c, 0x45, 0xcc, 0x76, 0x2d, 0x3d, 0x38, 0x2c, 0xdc, 0x83,
	0xb5, 0xf7, 0x24, 0xa6, 0x3d, 0xd2, 0x5e, 0xeb, 0xa4, 0x13, 0x5c, 0x47, 0x41, 0x73, 0x25, 0x90,
	0x18, 0x79, 0x8f, 0xb4, 0x31, 0x6f, 0x21, 0x27, 0x21, 0x48, 0xdb, 0x44, 0x31, 0xbb, 0x81, 0x91,
	0xad, 0xc2, 0x7e, 0xec, 0xcc, 0xf4, 0x09, 0x21, 0x51, 0x22, 0xa2, 0x69, 0x68, 0xbb, 0x94, 0xed,
	0x75, 0x2b, 0xbd, 0xfa, 0x83, 0x8e, 0xef, 0x5a, 0xd8, 0x2f, 0x5a, 0xd8, 0x3f, 0x2b, 0x5a, 0x78,
	0x58, 0xfd, 0x65, 0xe9, 0xed, 0xfc, 0xf4, 0xab, 0x57, 0x09, 0x6a, 0xa8, 0xb3, 0x1e, 0x1a, 0x10,
	0x3a, 0x16, 0x3a, 0x33, 0x61, 0x06, 0x59, 0x66, 0x4b, 0x41, 0x58, 0xb5, 0x04, 0xac, 0x8d, 0xfa,
	0x53, 0x27, 0x47, 0xe6, 0x0b, 0x72, 0x90, 0xf0, 0xcb, 0xc8, 0x5a, 0x09, 0x64, 0xcb, 0xca, 0x37,
	0x89, 0xcf, 0x08, 0x9a, 0x42, 0xb0, 0x1d, 0xe8, 0x78, 0xa4, 0x04, 0x6f, 0xdf, 0x8a, 0xb1, 0x7b,
	0xff, 0x91, 0x9f, 0xb6, 0xb8, 0x39, 0x38, 0x5e, 0xbd, 0x6c, 0x7e, 0x81, 0x53, 0x23, 0xd1, 0x1e,
	0x85, 0x06, 0x7b, 0x5d, 0x42, 0x6e, 0x58, 0xa3, 0xd4, 0x51, 0x38, 0xdd, 0xc0, 0xd0, 0x63, 0x52,
	0xd7, 0x10, 0x81, 0x58, 0x38, 0xca, 0x7e, 0x09, 0x0a, 0x29, 0x84, 0x03, 0x43, 0x3f, 0x27, 0x0d,
	0x21, 0x33, 0xc3, 0x93, 0xc4, 0x15, 0xd6, 0x2c, 0xc1, 0xa9, 0xe7, 0x4a, 0x2c, 0x6a, 0x4c, 0x5a,
	0x2b, 0x50, 0x7e, 0x31, 0x5b, 0xff, 0xc7, 0xc5, 0x6c, 0x16, 0x9b, 0xe4, 0xf7, 0xf3, 0xdd, 0xf5,
	0x3e, 0x91, 0x9a, 0x4b, 0xa3, 0xcf, 0x59, 0xdb, 0xdd, 0x8d, 0xdc, 0xfc, 0xc4, 0x59, 0xa9, 0x21,
	0xac, 0x08, 0x14, 0xb3, 0x54, 0xe7, 0xdd, 0x35, 0xe2, 0x19, 0xc4, 0xec, 0x00, 0xab, 0xfc, 0xc0,
	0xff, 0xb7, 0xc7, 0xc4, 0x2f, 0xd2, 0xf2, 0x8b, 0x01, 0xed, 0x0f, 0x95, 0x4a, 0x86, 0xbb, 0xb6,
	0xfe, 0xe0, 0x56, 0xce, 0x3e, 0x59, 0xa1, 0x87, 0x96, 0x4c, 0x3d, 0x52, 0xcf, 0xdb, 0x0e, 0x27,
	0x1e, 0xc5, 0xd4, 0x08, 0x9a, 0xdc, 0xe0, 0x3a, 0x25, 0x7b, 0x79, 0x27, 0xb1, 0x9b, 0x98, 0xc5,
	0xc3, 0x2d, 0xb3, 0xc0, 0x31, 0xef, 0x0f, 0x66, 0xb6, 0xbc, 0x3c, 0x89, 0x82, 0x64, 0x77, 0x8d,
	0x61, 0x21, 0x22, 0x08, 0xcd, 0x79, 0x0a, 0xec, 0x75, 0xb7, 0xab, 0x33, 0x9d, 0x9d, 0xa7, 0x40,
	0xbb, 0xa4, 0x0e, 0x72, 0x21, 0xb4, 0x92, 0x33, 0x90, 0x86, 0x1d, 0x62, 0xc0, 0xa6, 0x89, 0x86,
	0xa4, 0x69, 0xeb, 0x0c, 0xb3, 0x78, 0x1a, 0x26, 0xb0, 0x80, 0x84, 0xdd, 0x2a, 0x95, 0xde, 0xea,
	0x27, 0x9d, 0xac, 0xd2, 0x6b, 0x58, 0xdb, 0x69, 0x3c, 0x7d, 0x66, 0x71, 0xb4, 0x47, 0xea, 0x3f,
	0x28, 0x09, 0xa1, 0x1a, 0x8f, 0x33, 0x30, 0xec, 0x76, 0xb7, 0xd2, 0xbb, 0x36, 0xdc, 0xbb, 0x58,
	0x7a, 0xd7, 0x84, 0x34, 0x01, 0xb1, 0xbe, 0xe7, 0xe8, 0xa2, 0x2f, 0x08, 0xc1, 0x67, 0x29, 0x9c,
	0x0a, 0x19, 0x33, 0xd6, 0xad, 0xf4, 0x9a, 0x0f, 0xee, 0x6f, 0x99, 0x06, 0x0a, 0xfd, 0x2f, 0x84,
	0x8c, 0x83, 0x1a, 0xae, 0xed, 0x92, 0xbe, 0x4d, 0x1a, 0xa9, 0x90, 0x13, 0xfb, 0x56, 0x85, 0x73,
	0x9d, 0xb0, 0x37, 0x5c, 0xfd, 0x85, 0xed, 0x2b, 0x9d, 0xd0, 0x6f, 0xc9, 0x7e, 0xf1, 0x9c, 0x85,
	0x31, 0x37, 0x9c, 0x75, 0x4a, 0xf5, 0x48, 0xa1, 0xf5, 0x9f, 0x72, 0xc3, 0x83, 0x46, 0xf1, 0x69,
	0xbf, 0xe8, 0x5d, 0xb2, 0xef, 0xa6, 0xa6, 0xca, 0x42, 0xc9, 0x67, 0xc0, 0xde, 0x74, 0xdb, 0xa3,
	0xf1, 0x79, 0xf6, 0x25, 0x9f, 0x01, 0x7d, 0xa7, 0x88, 0x29, 0x9a, 0xfa, 0x0e, 0xc6, 0x34, 0xd0,
	0x58, 0xb4, 0xf4, 0x7b, 0xe4, 0xc0, 0x05, 0x6d, 0x1e, 0xf6, 0x5b, 0x6e, 0xde, 0xa3, 0xe3, 0xe9,
	0xfa, 0xc4, 0xef, 0x91, 0xf6, 0x95, 0xb6, 0x3f, 0xea, 0x56, 0x7a, 0xd5, 0xa0, 0x25, 0x2e, 0xf5,
	0x6c, 0x9f, 0xdc, 0xcc, 0x81, 0x76, 0xba, 0xb8, 0x97, 0x08, 0x62, 0xe6, 0x61, 0x34, 0x75, 0xae,
	0x60, 0xc3, 0xf3, 0x51, 0xf5, 0xc7, 0x57, 0xde, 0xce, 0x5f, 0x3f, 0x7b, 0x3b, 0xc3, 0xc3, 0xdf,
	0x7e, 0x3f, 0xda, 0x79, 0xf5, 0xc7, 0x51, 0xe5, 0xbb, 0xfa, 0xc6, 0x6f, 0x19, 0xdd, 0xc0, 0xb9,
	0xf1, 0xf0, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x5e, 0xb3, 0x4b, 0xde, 0xbf, 0x09, 0x00, 0x00,
}

func (m *Event) ProtoSize() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppToken)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.Tracker)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.Adid)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.FacebookAttributionId)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.FacebookAnonId)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.TrackingEnabled)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ClickTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.FirstSessionTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastSessionTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastEventTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.LastRevenueTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.CreatedAt)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.ReceivedAt)
	n += 1 + l + sovGenerated(uint64(l))
	l = github_com_gogo_protobuf_types.SizeOfStdTime(m.InstallTime)
	n += 1 + l + sovGenerated(uint64(l))
	l = len(m.InstallTracker)
	if l > 0 {
		n += 1 + l + sovGenerated(uint64(l))
	}
	l = len(m.InstallCountry)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = m.InstallImpressionBased.ProtoSize()
	n += 2 + l + sovGenerated(uint64(l))
	l = len(m.EventToken)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = m.Revenue.ProtoSize()
	n += 2 + l + sovGenerated(uint64(l))
	l = len(m.DeviceType)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.Environment)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = m.NullSdkLevel.ProtoSize()
	n += 2 + l + sovGenerated(uint64(l))
	if m.ZoneOffset != 0 {
		n += 2 + sovGenerated(uint64(m.ZoneOffset))
	}
	if m.FraudKind != 0 {
		n += 2 + sovGenerated(uint64(m.FraudKind))
	}
	l = len(m.PingbackUrl)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	if m.CallbackData != nil {
		l = m.CallbackData.ProtoSize()
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.FirstOsName)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.FirstCountry)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	l = len(m.FirstDeviceType)
	if l > 0 {
		n += 2 + l + sovGenerated(uint64(l))
	}
	if m.ImpressionBased {
		n += 3
	}
	if m.DeviceReattributed {
		n += 3
	}
	//if m.XXX_unrecognized != nil {
	//	n += len(m.XXX_unrecognized)
	//}
	return n
}

func sovGenerated(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenerated(x uint64) (n int) {
	return sovGenerated(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
