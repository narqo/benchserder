// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: github.com/narqo/benchserder/internal/fraud/generated.proto

package fraud

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

var Kind_name = map[int32]string{
	0: "NONE",
	1: "ANONYMOUS_TRAFFIC",
	2: "DEPRECATED_SDK_VERSION",
	3: "INVALID_SIGNATURE",
	4: "UNVERIFIABLE_OS_VERSION",
	5: "MALFORMED_ADVERTISING_ID",
	6: "TOO_MANY_ENGAGEMENTS",
	7: "DISTRIBUTION_OUTLIER",
	8: "ENGAGEMENT_INJECTION",
}

var Kind_value = map[string]int32{
	"NONE":                     0,
	"ANONYMOUS_TRAFFIC":        1,
	"DEPRECATED_SDK_VERSION":   2,
	"INVALID_SIGNATURE":        3,
	"UNVERIFIABLE_OS_VERSION":  4,
	"MALFORMED_ADVERTISING_ID": 5,
	"TOO_MANY_ENGAGEMENTS":     6,
	"DISTRIBUTION_OUTLIER":     7,
	"ENGAGEMENT_INJECTION":     8,
}

func (Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd0c7df10f360328, []int{0}
}

func init() {
	proto.RegisterEnum("github.com.narqo.benchserder.internal.fraud.Kind", Kind_name, Kind_value)
}

func init() {
	proto.RegisterFile("github.com/narqo/benchserder/internal/fraud/generated.proto", fileDescriptor_cd0c7df10f360328)
}

var fileDescriptor_cd0c7df10f360328 = []byte{
	// 526 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd2, 0x4f, 0x6f, 0xd3, 0x3c,
	0x00, 0x06, 0xf0, 0xf4, 0x5d, 0xb7, 0x77, 0x8a, 0x38, 0x84, 0x50, 0xb6, 0x91, 0x43, 0x14, 0x89,
	0x1b, 0x13, 0x09, 0x08, 0x84, 0x90, 0x38, 0x79, 0x8b, 0x5b, 0x99, 0x35, 0x36, 0xca, 0x9f, 0x4a,
	0xe3, 0x12, 0x25, 0x8d, 0x93, 0x19, 0x5a, 0x7b, 0x38, 0x49, 0xa5, 0x7d, 0x03, 0x94, 0x13, 0x5f,
	0x20, 0x12, 0x12, 0x3b, 0xf0, 0x31, 0x10, 0x27, 0x8e, 0x3b, 0x72, 0x44, 0xed, 0x17, 0x41, 0x4d,
	0x35, 0xba, 0x9b, 0x9f, 0xc3, 0xef, 0x79, 0x64, 0xd9, 0xea, 0x9b, 0x82, 0x55, 0x17, 0x75, 0x6a,
	0x4f, 0xc5, 0xdc, 0xe1, 0x89, 0xfc, 0x24, 0x9c, 0x94, 0xf2, 0xe9, 0x45, 0x49, 0x65, 0x46, 0xa5,
	0xc3, 0x78, 0x45, 0x25, 0x4f, 0x66, 0x4e, 0x2e, 0x93, 0x3a, 0x73, 0x0a, 0xca, 0xa9, 0x4c, 0x2a,
	0x9a, 0xd9, 0x97, 0x52, 0x54, 0x42, 0x3f, 0xde, 0x62, 0xbb, 0xc3, 0xf6, 0x1d, 0x6c, 0xdf, 0x62,
	0xbb, 0xc3, 0xc6, 0xd3, 0x3b, 0x4b, 0x85, 0x28, 0x84, 0xd3, 0x75, 0xa4, 0x75, 0xde, 0xa5, 0x2e,
	0x74, 0xa7, 0x4d, 0xf7, 0x93, 0x9f, 0x3b, 0x6a, 0xff, 0x8c, 0xf1, 0x4c, 0xd7, 0xd5, 0x3e, 0x26,
	0x18, 0x6a, 0x8a, 0xb1, 0xdf, 0xb4, 0x56, 0x1f, 0x0b, 0x4e, 0xf5, 0x63, 0xf5, 0x3e, 0xc0, 0x04,
	0x9f, 0x7b, 0x24, 0x0a, 0xe2, 0xd0, 0x07, 0xc3, 0x21, 0x3a, 0xd5, 0x7a, 0xc6, 0xa0, 0x69, 0x2d,
	0x0d, 0x70, 0xc1, 0xaf, 0xe6, 0xa2, 0x2e, 0x43, 0x99, 0xe4, 0x39, 0x9b, 0xea, 0x2f, 0xd5, 0x03,
	0x17, 0xbe, 0xf3, 0xe1, 0x29, 0x08, 0xa1, 0x1b, 0x07, 0xee, 0x59, 0x3c, 0x81, 0x7e, 0x80, 0x08,
	0xd6, 0xfe, 0x33, 0x8e, 0x9a, 0xd6, 0x1a, 0xb8, 0xf4, 0x52, 0xd2, 0xe9, 0xfa, 0x5e, 0x41, 0xf6,
	0x71, 0x42, 0x65, 0xc9, 0x04, 0x5f, 0x4f, 0x20, 0x3c, 0x01, 0x63, 0xe4, 0xc6, 0x01, 0x1a, 0x61,
	0x10, 0x46, 0x3e, 0xd4, 0x76, 0x36, 0x13, 0x88, 0x2f, 0x92, 0x19, 0xcb, 0x02, 0x56, 0xf0, 0xa4,
	0xaa, 0x25, 0xd5, 0x5f, 0xa9, 0x87, 0x11, 0x9e, 0x40, 0x1f, 0x0d, 0x11, 0x38, 0x19, 0xc3, 0x98,
	0x04, 0xff, 0x36, 0xfa, 0xc6, 0xa3, 0xa6, 0xb5, 0x1e, 0x46, 0x7c, 0x41, 0x25, 0xcb, 0x59, 0x92,
	0xce, 0x28, 0x29, 0x6f, 0x47, 0x5e, 0xab, 0x47, 0x1e, 0x18, 0x0f, 0x89, 0xef, 0x41, 0x37, 0x06,
	0xee, 0x04, 0xfa, 0x21, 0x0a, 0x10, 0x1e, 0xc5, 0xc8, 0xd5, 0x76, 0x0d, 0xa3, 0x69, 0xad, 0x03,
	0x2f, 0x99, 0xe5, 0x42, 0xce, 0x69, 0x06, 0xb2, 0x05, 0x95, 0x15, 0x2b, 0x19, 0x2f, 0x50, 0xa6,
	0x3f, 0x53, 0x07, 0x21, 0x21, 0xb1, 0x07, 0xf0, 0x79, 0x0c, 0xf1, 0x08, 0x8c, 0xa0, 0x07, 0x71,
	0x18, 0x68, 0x7b, 0xc6, 0x41, 0xd3, 0x5a, 0x7a, 0x28, 0x84, 0x97, 0xf0, 0x2b, 0xc8, 0x8b, 0xa4,
	0xa0, 0x73, 0xca, 0xab, 0x52, 0x7f, 0xae, 0x0e, 0x5c, 0x14, 0x84, 0x3e, 0x3a, 0x89, 0x42, 0x44,
	0x70, 0x4c, 0xa2, 0x70, 0x8c, 0xa0, 0xaf, 0xfd, 0x6f, 0x1c, 0x36, 0xad, 0xf5, 0xc0, 0x65, 0x65,
	0x25, 0x59, 0x5a, 0x57, 0x4c, 0x70, 0x52, 0x57, 0x33, 0x46, 0xe5, 0x9a, 0x6c, 0xbb, 0x63, 0x84,
	0xdf, 0xc2, 0xd3, 0x35, 0xd5, 0xf6, 0x37, 0x64, 0xdb, 0x8e, 0xf8, 0x07, 0x3a, 0x5d, 0x4b, 0xe3,
	0xde, 0xe7, 0x6f, 0xa6, 0xf2, 0xfd, 0xda, 0x54, 0x7e, 0x5c, 0x9b, 0xca, 0xc9, 0xe3, 0x5f, 0x4b,
	0xb3, 0x77, 0xb3, 0x34, 0x7b, 0x7f, 0x96, 0xa6, 0xf2, 0x65, 0x65, 0x2a, 0x5f, 0x57, 0x66, 0xef,
	0x66, 0x65, 0x2a, 0xbf, 0x57, 0xa6, 0xf2, 0x7e, 0xb7, 0xfb, 0x18, 0xe9, 0x5e, 0xf7, 0xe0, 0x2f,
	0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x4f, 0x85, 0x55, 0x8b, 0x02, 0x00, 0x00,
}
